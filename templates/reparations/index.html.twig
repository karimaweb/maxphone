{% extends 'base.html.twig' %}

{% block title %}Suivi des R√©parations{% endblock %}

{% block body %}
    <div class="container mt-4">
        {% if app.user %}
            <div class="alert alert-info">
                Bonjour <strong>{{ app.user.getNomUtilisateur() }} {{ app.user.getPrenomUtilisateur() }}</strong> , voici le suivi de vos r√©parations.
            </div>
        <table class="table table-hover">
            <thead class="table-dark">
                <tr>
                    <th>Produit</th>
                    <th>Date D√©p√¥t</th>
                    <th>Statut de la R√©paration</th>
                </tr>
            </thead>
            <tbody id="reparations-container">
                <tr>
                    <td colspan="4" class="text-center">Chargement des r√©parations...</td>
                </tr>
            </tbody>
        </table>

        {# <div class="text-center mt-3">
            <button id="showHistoryBtn" class="btn btn-primary">üîç Voir l‚Äôhistorique complet</button>
        </div> #}
    </div>
    {% else %}
            <div class="alert alert-warning">
                 Vous n'√™tes pas connect√©. Veuillez <a href="{{ path('app_login') }}">vous connecter</a> pour voir vos r√©parations.
            </div>
        {% endif %}
    </div>

    <script>
        document.addEventListener("DOMContentLoaded", function () {
            fetch("/api/mes-reparations")                                                                                                       // fetch enoie une requ√™te HTTP au chemin /api/mes-reparations, elle renvoie une promesse reponse serveur
                .then(response => response.json())                                                                                                 //une fois que la req√™te est termin√© le flux json est converti via la m√©thode response.js en objet js manipulable
                .then(data => { // r√©cup√©ration de donn√©es soit obbjet r√©paration ou objet contenant erreur 
                    let container = document.getElementById("reparations-container");
                    container.innerHTML = "";

                    if (data.error) { // testet si l'erreur existe
                        container.innerHTML = `<tr><td colspan="4" class="text-danger">${data.error}</td></tr>`;// afficher dans le tableau HTML
                        return; // on arr√™te l‚Äôex√©cution
                    }

                    if (data.length === 0) { // si ya pas de r√©paration tableau vide on insere le message 
                        container.innerHTML = "<tr><td colspan='4' class='text-center'>Aucune r√©paration en cours.</td></tr>";
                        return;
                    }

                    data.forEach(reparation => { // si on a des r√©parations 
                        let row = document.createElement("tr"); // chaque √©l√©ment est une r√©paration on cr√©e une ligne<tr< pour afficher les proprit√©s
                        row.innerHTML = `  
                            <td>${reparation.produit}</td>
                            <td>${reparation.dateDepot}</td>
                            <td>
                                <span class="badge ${getStatusClass(reparation.statut)}">${reparation.statut}</span>
                            </td>
                            
                        `;
                        container.appendChild(row); // on ajoute la ligne compl√©te  au container pour afficher les donn√©es dans la page
                    });
                })
                .catch(error => {
                    console.error("Erreur API:", error);
                    document.getElementById("reparations-container").innerHTML = "<tr><td colspan='4' class='text-danger'>Aucune r√©paration trouv√©e.</td></tr>";
                });
        });
        

        function getStatusClass(statut) { // peremet un affichage personnalis√© pour le statut 
            const statusMapping = {
                "En attente": "bg-secondary",
                "Pi√®ce command√©e": "bg-primary",
                "Pi√®ce re√ßue": "bg-info",
                "D√©but de r√©paration": "bg-warning text-dark",
                "Test final en cours": "bg-warning",
                "Termin√©": "bg-success",
                "Annul√©": "bg-danger"
            };
            return statusMapping[statut] || "bg-light text-dark";
        }

        function showDetails(id) {
            alert(" Affichage des d√©tails de la r√©paration ID: " + id);
            // Ici, tu peux rediriger vers une page de d√©tails
        }

        document.getElementById("showHistoryBtn").addEventListener("click", function () {
            alert("Chargement de l'historique complet...");
            // je vais ajouter le code pour  r√©cup√©rer l'historique complet
        });
    </script>

   

{% endblock %}
